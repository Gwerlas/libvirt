---
- name: Load variables
  when: system_wide is undefined
  ansible.builtin.import_tasks: "{{ role_path }}/tasks/facts.yml"

- name: Backend checkup and settings
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/{{ backend }}/checks.yml"
  loop: "{{ libvirt_backends }}"
  loop_control:
    loop_var: backend

- name: Installation
  become: true
  block:
    - name: Portage specifics tasks
      when: ansible_pkg_mgr == "portage"
      block:
        - name: Build first spice without smartcard
          when: "'qemu' in libvirt_backends"
          community.general.portage:
            package: app-emulation/spice
            oneshot: true

        - name: Portage configuration
          ansible.builtin.template:
            src: "{{ folder }}.j2"
            dest: /etc/portage/{{ folder }}/libvirt
            group: portage
            mode: "664"
          loop:
            - package.use
          loop_control:
            loop_var: folder
          notify: emerge --deep --newuse
        
        - name: Rebuild packages with new use flags now
          ansible.builtin.meta: flush_handlers

    - name: Packages
      ansible.builtin.package:
        name: "{{ packages_computed }}"

    - name: Server side settings
      when: "'daemon' in libvirt_install"
      vars:
        group: "{{ grps.libvirt | default('libvirt') }}"
      block:
        - name: Services
          ansible.builtin.service:
            name: "{{ service }}"
            state: started
            enabled: true
          loop: "{{ services | sort | unique }}"
          loop_control:
            loop_var: service
          register: start_libvirtd

        - name: Users
          when: group | length > 0
          ansible.builtin.user:
            name: "{{ username }}"
            append: true
            groups:
              - "{{ group }}"
          loop: "{{ libvirt_users }}"
          loop_control:
            loop_var: username

- name: Reset connection to take effect of new grps relationship
  ansible.builtin.meta: reset_connection
  
- name: Backend post installation tasks
  ansible.builtin.include_tasks: "{{ role_path }}/tasks/{{ backend }}/post-install.yml"
  loop: "{{ libvirt_backends }}"
  loop_control:
    loop_var: backend
